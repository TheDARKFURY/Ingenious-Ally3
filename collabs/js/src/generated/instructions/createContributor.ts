/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category CreateContributor
 * @category generated
 */
export type CreateContributorInstructionArgs = {
  contributorGitName: string
}
/**
 * @category Instructions
 * @category CreateContributor
 * @category generated
 */
export const createContributorStruct = new beet.FixableBeetArgsStruct<
  CreateContributorInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['contributorGitName', beet.utf8String],
  ],
  'CreateContributorInstructionArgs'
)
/**
 * Accounts required by the _createContributor_ instruction
 *
 * @property [_writable_] contributorAccount
 * @property [_writable_, **signer**] leader
 * @property [] contributor
 * @property [] gitRepoXpPoolAccount
 * @category Instructions
 * @category CreateContributor
 * @category generated
 */
export type CreateContributorInstructionAccounts = {
  contributorAccount: web3.PublicKey
  leader: web3.PublicKey
  contributor: web3.PublicKey
  gitRepoXpPoolAccount: web3.PublicKey
  systemProgram?: web3.PublicKey
}

export const createContributorInstructionDiscriminator = [
  110, 184, 236, 66, 220, 3, 68, 216,
]

/**
 * Creates a _CreateContributor_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category CreateContributor
 * @category generated
 */
export function createCreateContributorInstruction(
  accounts: CreateContributorInstructionAccounts,
  args: CreateContributorInstructionArgs,
  programId = new web3.PublicKey('4HYr7M3ytiSoqr3Zh3iK1VcNNm7ZgrNikwmWYJdGMvw4')
) {
  const [data] = createContributorStruct.serialize({
    instructionDiscriminator: createContributorInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.contributorAccount,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.leader,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.contributor,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.gitRepoXpPoolAccount,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.systemProgram ?? web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
