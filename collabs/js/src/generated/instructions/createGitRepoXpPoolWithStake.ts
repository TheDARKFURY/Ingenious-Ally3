/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as splToken from '@solana/spl-token'
import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category CreateGitRepoXpPoolWithStake
 * @category generated
 */
export type CreateGitRepoXpPoolWithStakeInstructionArgs = {
  gitRepoUrl: string
  stakeAmount: beet.bignum
}
/**
 * @category Instructions
 * @category CreateGitRepoXpPoolWithStake
 * @category generated
 */
export const createGitRepoXpPoolWithStakeStruct =
  new beet.FixableBeetArgsStruct<
    CreateGitRepoXpPoolWithStakeInstructionArgs & {
      instructionDiscriminator: number[] /* size: 8 */
    }
  >(
    [
      ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
      ['gitRepoUrl', beet.utf8String],
      ['stakeAmount', beet.u64],
    ],
    'CreateGitRepoXpPoolWithStakeInstructionArgs'
  )
/**
 * Accounts required by the _createGitRepoXpPoolWithStake_ instruction
 *
 * @property [_writable_] gitRepoXpPoolAccount
 * @property [_writable_, **signer**] leader
 * @property [_writable_] leaderTokenAcc
 * @property [] bonkMint
 * @property [_writable_] bonkEscrowTokenAcc
 * @category Instructions
 * @category CreateGitRepoXpPoolWithStake
 * @category generated
 */
export type CreateGitRepoXpPoolWithStakeInstructionAccounts = {
  gitRepoXpPoolAccount: web3.PublicKey
  leader: web3.PublicKey
  leaderTokenAcc: web3.PublicKey
  bonkMint: web3.PublicKey
  bonkEscrowTokenAcc: web3.PublicKey
  tokenProgram?: web3.PublicKey
  systemProgram?: web3.PublicKey
}

export const createGitRepoXpPoolWithStakeInstructionDiscriminator = [
  239, 181, 57, 97, 161, 71, 203, 188,
]

/**
 * Creates a _CreateGitRepoXpPoolWithStake_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category CreateGitRepoXpPoolWithStake
 * @category generated
 */
export function createCreateGitRepoXpPoolWithStakeInstruction(
  accounts: CreateGitRepoXpPoolWithStakeInstructionAccounts,
  args: CreateGitRepoXpPoolWithStakeInstructionArgs,
  programId = new web3.PublicKey('4HYr7M3ytiSoqr3Zh3iK1VcNNm7ZgrNikwmWYJdGMvw4')
) {
  const [data] = createGitRepoXpPoolWithStakeStruct.serialize({
    instructionDiscriminator:
      createGitRepoXpPoolWithStakeInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.gitRepoXpPoolAccount,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.leader,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.leaderTokenAcc,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.bonkMint,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.bonkEscrowTokenAcc,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.tokenProgram ?? splToken.TOKEN_PROGRAM_ID,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.systemProgram ?? web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
